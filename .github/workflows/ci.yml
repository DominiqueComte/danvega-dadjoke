---
# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven
name: Java CI with Maven

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: "temurin"
          cache: maven
      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Build with Maven
        run: mvn -B verify --file pom.xml

  native-build:
    name: Run 'spring-native-graal'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        version: [22.3.0] # temporarily locked to 22.3.0 for Spring Boot 3 compatibility
    steps:
      - uses: actions/checkout@v3
      - uses: graalvm/setup-graalvm@v1
        with:
          version: ${{ matrix.version }}
          java-version: "21"
          components: "native-image"
          github-token: ${{ secrets.GITHUB_TOKEN }}
          cache: "maven"
          native-image-job-reports: "true"
      - name: Run 'native-build
        run: mvn native:compile -Pnative -DskipTests
      # TODO: copy the native image to the /build directory
